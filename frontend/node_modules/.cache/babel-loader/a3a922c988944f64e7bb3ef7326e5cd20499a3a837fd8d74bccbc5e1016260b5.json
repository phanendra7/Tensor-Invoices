{"ast":null,"code":"var _jsxFileName = \"E:\\\\oncampus\\\\tensorgo\\\\invoice\\\\frontend\\\\src\\\\components\\\\invoice_list.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InvoiceList = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      const response = await fetch('/invoices');\n      if (response.ok) {\n        const data = await response.json();\n        setInvoices(data);\n      } else {\n        console.error('Error fetching invoices');\n      }\n      setLoading(false);\n    };\n    fetchInvoices();\n  }, []);\n\n  // Check if invoices is an array before accessing its length\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n  if (!Array.isArray(invoices)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Invalid data format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Invoices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), invoices.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No invoices found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: invoices.map(invoice => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: invoice.name\n      }, invoice.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n_s(InvoiceList, \"kd2c/yhk3ZhWev6knBDZOqNUAaM=\");\n_c = InvoiceList;\nvar _c;\n$RefreshReg$(_c, \"InvoiceList\");","map":{"version":3,"names":["InvoiceList","_s","invoices","setInvoices","useState","loading","setLoading","useEffect","fetchInvoices","response","fetch","ok","data","json","console","error","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","invoice","name","id","_c","$RefreshReg$"],"sources":["E:/oncampus/tensorgo/invoice/frontend/src/components/invoice_list.js"],"sourcesContent":["const InvoiceList = () => {\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n      const fetchInvoices = async () => {\r\n          const response = await fetch('/invoices');\r\n          if (response.ok) {\r\n              const data = await response.json();\r\n              setInvoices(data);\r\n          } else {\r\n              console.error('Error fetching invoices');\r\n          }\r\n          setLoading(false);\r\n      };\r\n\r\n      fetchInvoices();\r\n  }, []);\r\n\r\n  // Check if invoices is an array before accessing its length\r\n  if (loading) {\r\n      return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!Array.isArray(invoices)) {\r\n      return <div>Error: Invalid data format</div>;\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          <h2>Invoices</h2>\r\n          {invoices.length === 0 ? (\r\n              <p>No invoices found.</p>\r\n          ) : (\r\n              <ul>\r\n                  {invoices.map(invoice => (\r\n                      <li key={invoice.id}>{invoice.name}</li>\r\n                  ))}\r\n              </ul>\r\n          )}\r\n      </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,MAAMA,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAE5CG,SAAS,CAAC,MAAM;IACZ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;MACzC,IAAID,QAAQ,CAACE,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCV,WAAW,CAACS,IAAI,CAAC;MACrB,CAAC,MAAM;QACHE,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MACAT,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDE,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIH,OAAO,EAAE;IACT,oBAAOW,OAAA;MAAAC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACrB,QAAQ,CAAC,EAAE;IAC1B,oBAAOc,OAAA;MAAAC,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChD;EAEA,oBACIL,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBnB,QAAQ,CAACsB,MAAM,KAAK,CAAC,gBAClBR,OAAA;MAAAC,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBL,OAAA;MAAAC,QAAA,EACKf,QAAQ,CAACuB,GAAG,CAACC,OAAO,iBACjBV,OAAA;QAAAC,QAAA,EAAsBS,OAAO,CAACC;MAAI,GAAzBD,OAAO,CAACE,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ,CAAC;AAACpB,EAAA,CA1CID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}