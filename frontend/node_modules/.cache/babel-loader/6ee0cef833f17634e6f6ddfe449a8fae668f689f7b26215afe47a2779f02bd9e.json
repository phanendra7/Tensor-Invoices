{"ast":null,"code":"var _jsxFileName = \"E:\\\\oncampus\\\\tensorgo\\\\invoice\\\\frontend\\\\src\\\\components\\\\trigger_automation.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TriggerAutomation = () => {\n  const handleAutomation = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/trigger-automation');\n      alert(`Automation triggered: ${response.data.message}`);\n    } catch (err) {\n      alert('Failed to trigger automation: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trigger Automation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAutomation,\n      children: \"Run Automation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = TriggerAutomation;\nexport default TriggerAutomation;\nvar _c;\n$RefreshReg$(_c, \"TriggerAutomation\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","TriggerAutomation","handleAutomation","response","post","alert","data","message","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/oncampus/tensorgo/invoice/frontend/src/components/trigger_automation.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TriggerAutomation = () => {\r\n    const handleAutomation = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/trigger-automation');\r\n            alert(`Automation triggered: ${response.data.message}`);\r\n        } catch (err) {\r\n            alert('Failed to trigger automation: ' + err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Trigger Automation</h2>\r\n            <button onClick={handleAutomation}>Run Automation</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TriggerAutomation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,0CAA0C,CAAC;MAC7EC,KAAK,CAAC,yBAAyBF,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE,CAAC;IAC3D,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVH,KAAK,CAAC,gCAAgC,GAAGG,GAAG,CAACD,OAAO,CAAC;IACzD;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bb,OAAA;MAAQc,OAAO,EAAEZ,gBAAiB;MAAAO,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC;AAACE,EAAA,GAhBId,iBAAiB;AAkBvB,eAAeA,iBAAiB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}